{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/healthcheck.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--<form class=\\\"form-inline\\\">\\r\\n  <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" ngModel name=\\\"searchText\\\">\\r\\n</form>-->\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">D4SM</a>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onReloadClick()\\\">Reload Configuration</button>\\r\\n</nav>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"hasError\\\"> \\r\\n        {{errorMessage}}\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\" *ngIf=\\\"hasInfo\\\"> \\r\\n        {{infoMessage}}\\r\\n    </div>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">#</th>\\r\\n            <th scope=\\\"col\\\">Service Name</th>\\r\\n            <th scope=\\\"col\\\">Service Status</th>\\r\\n            <th scope=\\\"col\\\">Status Message</th>\\r\\n            <th scope=\\\"col\\\">Status</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let service of services;let i = index\\\">\\r\\n          <tr>\\r\\n            <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n            <td>{{service.serviceName}}</td>\\r\\n            <td>{{service.serviceStatus}}</td>\\r\\n            <td>{{service.statusMessage}}</td>\\r\\n            <td>\\r\\n              <a class=\\\"btn btn-success\\\" href=\\\"#\\\" role=\\\"button\\\" *ngIf=\\\"service.serviceStatus === 'ok'\\\">Success</a>\\r\\n              <a class=\\\"btn btn-danger\\\" href=\\\"#\\\" role=\\\"button\\\" *ngIf=\\\"service.serviceStatus !== 'ok'\\\">Error</a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { HealthcheckService } from './healthcheck.service';\r\nimport { IService } from './shared/models/service.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  public services = [];\r\n  public errorMessage: string = '';\r\n  public infoMessage: string = '';\r\n  hasError: boolean;\r\n  hasInfo: boolean;\r\n\r\n  constructor(private _healthcheckService: HealthcheckService) { }\r\n  \r\n  ngOnInit() {\r\n    this._healthcheckService.getAllServices()\r\n            .subscribe(data => {\r\n              this.services = data;\r\n            },\r\n            error => {\r\n              this.errorMessage = error;\r\n              this.hasError = true;\r\n              setTimeout(()=>{this.closeErrorMessage()}, 10000);\r\n            });\r\n  }\r\n  \r\n  onReloadClick() {\r\n    this._healthcheckService.reloadServicesJson()\r\n            .subscribe(data => {\r\n              this.infoMessage = data;\r\n              this.hasInfo = true;\r\n              setTimeout(()=>{this.closeInfoMessage()}, 10000);\r\n            },\r\n            error => {\r\n              this.errorMessage = error;\r\n              this.hasError = true;\r\n              setTimeout(()=>{this.closeErrorMessage()}, 10000);\r\n            });\r\n  }\r\n\r\n  closeErrorMessage() {\r\n    this.hasError = false;\r\n  }\r\n\r\n  closeInfoMessage() {\r\n    this.hasInfo = false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HealthcheckService } from './healthcheck.service';\r\nimport { HttpClientModule   } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [HealthcheckService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { IService } from './shared/models/service.model';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport { Options } from 'selenium-webdriver/firefox';\r\nimport { environment } from '../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class HealthcheckService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllServices(): Observable<IService[]> {\r\n    return this.http\r\n                  .get<IService[]>(environment.healthcheckAllUrl)\r\n                  .catch(this.errorHandler);\r\n  }\r\n  reloadServicesJson(){\r\n    return this.http\r\n                .get(environment.healthcheckReloadUrl, {responseType: 'text'})\r\n                .catch(this.errorHandler);\r\n  }\r\n  errorHandler(error: HttpErrorResponse) {\r\n    return Observable.throw(error.error.errorMessage || error.message);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/healthcheck.service.ts","export const environment = {\r\n  production: true,\r\n  healthcheckAllUrl: \"/all\",\r\n  healthcheckReloadUrl: \"/reload\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}